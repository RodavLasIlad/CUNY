// 1
use employment

// 2
db.employees.insert(
		{name: "Wendy Yasquez", title: "Assistant Professor", salary: 86000, department: "Computer science", hire_year: 1998}
)

// 3
function insertEmployee(n, t, s, d, hy){
	db.employees.insert(
		{name: n, title: t, salary: s, department: d, hire_year: hy}
	);
}

// 4
insertEmployee("Isabelle Winters", "Associate Professor", 92000, "Physics", 1995)
insertEmployee("Raoul Dewan", "Assistant Professor", 78000, ["Physics", "Biology"], 1998)
insertEmployee("Jack McDunn", "Associate Professor", 101000, "Physics", 1993)

// 5
function insertAdmin(n, t, s, div, hy, l){
	// Setting the location to 'na' if it is not specified
	l = typeof l !== 'undefined' ?  l : "na";
	db.employees.insert(
		{name: n, title: t, salary: s, division: div, hire_year: hy, location: l}
	);
}

// 6
insertAdmin("Tonja Baldner", "Assistant to the Dean", 42000, "Arts and Sciences", 2001)
insertAdmin("Dennis Bohnet", "Vice President", 106500, "Academic Affairs", 1997, "Main Campus")

// 7
db.employees.find( { salary: { $lt: 90000 } } )

// 8
db.employees.find( {title: {$regex: ".*Professor.*"},  salary: { $lt: 90000 } } )

// 9
db.employees.find( { department: "Physics", hire_year: { $lt: 2001} } )

// 10
db.employees.find( { $or: [{department: {$elemMatch: {$ne: "Physics"} } }, {department: {$ne: "Physics"} } ] } )

// 11
db.employees.find( { $or: [ {hire_year: {$lt: 1997}}, {salary: {$gt: 100000}} ] } )

// 12
db.employees.update( {name: "Tonja Baldner"}, {$mul: {salary: 1.1} } )

// 13
db.employees.remove( {name: "Raoul Dewan"} )

// 14
// Reinserting so that he can be removed again
insertEmployee("Raoul Dewan", "Assistant Professor", 78000, ["Physics", "Biology"], 1998)
// Inserting into the new table after updating
db.pastemployees.insert( 
	db.employees.findAndModify( 
		{ query: {name: "Raoul Dewan"} , 
		update: { $set: {departyear: 2014}},
		new: true 
	) 
)
// Removing him again
db.employees.remove( {name: "Raoul Dewan"} )